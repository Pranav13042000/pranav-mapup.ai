distance_matrix = df.pivot(index='id_start', columns='id_end', values='distance')

distance_matrix = distance_matrix.fillna(0)





toll_rates_df = unrolled_df.copy()

toll_rates_df['moto_rate'] = 0.1 * toll_rates_df['distance']
toll_rates_df['car_rate'] = 0.2 * toll_rates_df['distance']
toll_rates_df['rv_rate'] = 0.3 * toll_rates_df['distance']
toll_rates_df['bus_rate'] = 0.4 * toll_rates_df['distance']
toll_rates_df['truck_rate'] = 0.5 * toll_rates_df['distance']




reference_avg_distance = unrolled_df[ unrolled_df['id_start']= reference_id]['distance'].mean()
lower_bound= reference_avg_distance * (1 - threshold / 100)
upper_bound= reference_avg_distance * (1 - threshold / 100)
similar_ids_df= unrolled_df.groupby ('id_start')['distance'].mean().between(lower_bound, upper_bound).rest_index()
return similar_ids_df


rate_coefficients = {'moto': 0.8, 'car': 1.2, 'rv': 1.5, 'bus': 2.2, 'truck': 3.6}
for vehicle_type, rate_coefficient in rate_coefficients.items():
    df[vehicle_type] = df['distance'] * rate_coefficient

return df




df['start_day'] = 'Monday'
df['end_day'] = 'Sunday'
df['start_time'] = time(0, 0, 0)
df['end_time'] = time(23, 59, 59)

for start_time, end_time, discount_factor in time_ranges:
    df.loc[(df['start_time'] >= start_time) & (df['end_time'] <= end_time) &
           (df['start_day'].isin(['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'])),
           ['moto', 'car', 'rv', 'bus', 'truck']] *= discount_factor
df.loc[df['start_day'].isin(['Saturday', 'Sunday']),
       ['moto', 'car', 'rv', 'bus', 'truck']] *= weekend_discount_factor

return df
